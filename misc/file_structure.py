import os
import shutil

def formatting(source_dir: str, tracker_name: str, num_files: int) -> None:
    """
    Helper function that reads files is the source directory (output files generated by the tracker) and
    formats the output files by removing tab spaces and replacing them with commas. This is done to replicate 
    the specified format for the GOT10K evaluation kit. 

    : param source_dir: Path to the directory that contains the generated output files.
    : param  tracker_name: Name of the tracker based on GOT10K evaluation kit submission instructions.
    : param num_files: The number of files per type i.e., bounding box predictions, time measurements, etc. 
    """
    for i in range(1, num_files+1):

        folder_name = f'{tracker_name}_{i:06}'

        file_to_read = os.path.join(source_dir, folder_name + ".txt")  # Construct the full file path

        if os.path.exists(file_to_read):
            with open(file_to_read, 'r') as file:
                content = file.read()
                # Removing tab spaces with commas
                modified_content = content.replace('\t', ',')
                # write it to the same file
            with open(file_to_read, 'w') as outfile:
                outfile.write(modified_content)
        else:
            print(f"File '{file_to_read}' not found.")

def restructure(source_dir: str, tracker_name: str, num_folders: str) -> None:
    """
    Helper function which rearranges .txt files into relevant folders and renames them to imitate the 
    specified format for GOT10K evaluation kit.

    : param source_dir: Path to the directory that contains the generated output files.
    : param  tracker_name: Name of the tracker based on GOT10K evaluation kit submission instructions.
    : param num_folders: The number of folders per sequence. 
    """
    for i in range(1, num_folders+1):

        folder_name = f'{tracker_name}_{i:06}'
        folder_path = os.path.join(tracker_name, folder_name)
        file_num = '_001'

        # Create folder
        os.makedirs(folder_path, exist_ok=True)
        
        for file_to_copy in os.listdir(source_dir):
            if file_to_copy == (folder_name + ".txt"):
                source_file_path = os.path.join(source_dir, file_to_copy)
                file = file_to_copy.rstrip('.txt') + file_num + '.txt'
                destination_file_path = os.path.join(folder_path, file)
                shutil.copy(source_file_path, destination_file_path)
            elif file_to_copy == (folder_name + "_time.txt"):
                source_file_path = os.path.join(source_dir, file_to_copy)
                destination_file_path = os.path.join(folder_path, file_to_copy)
                shutil.copy(source_file_path, destination_file_path)
            else:
                pass
    
    print("Task completed!")
        
if __name__ == '__main__':

    tracker_name = 'GOT-10k_Test'
    num_folders =  180
    source_dir = "/home/hassan/SMAT_2/SMAT/output/test/tracking_results/mobilevitv2_track/openvino/mobilevitv2_256_128x1_ep300/got10k"
    formatting(source_dir, tracker_name, num_folders)
    restructure(source_dir, tracker_name, num_folders)
